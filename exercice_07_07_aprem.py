# -*- coding: utf-8 -*-
"""Exercice 07/07 aprem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zok65Y81clu9xe6_tqni8CHoHVL3YLuV
"""

class DateNaissance:
  def __init__(self, jour=0, mois=0, annee=0):
    self.jour = jour
    self.mois = mois
    self.annee = annee
  def ToString(self):
    chaine = str(self.jour) + "/" + str(self.mois) +"/" + str(self.annee)
    return chaine

class Personne:
  def __init__(self, nom="N/A", prenom="N/A", Naissance=DateNaissance()):
    self.nom = nom
    self.prenom = prenom
    self.Naissance = Naissance
  def afficher(self):
    print("Nom: ", self.nom)
    print("Prenom: ", self.prenom, "\nDate de naissance: ", self.Naissance.ToString())

class Employe(Personne):
  def __init__(self, personne=Personne(), salaire=1000):
    self.personne = personne
    self.salaire = salaire
  def afficher(self):
    print(self.personne.afficher(), "\nSalaire: ", self.salaire)


class Chef(Employe):
  def __init__(self, employer = Employe(), service="N/A"):
    self.employer=employer
    self.service = service
  def afficher(self):
    print(self.employer.afficher(), "\nService: ", self.service)

date=DateNaissance(1,11,1111)
bonjour=date.ToString()
print(bonjour)

membre=Chef(Employe(Personne("Jean","paul",DateNaissance(26,5,1999)), 4545), "Ressources humaines")
membre.afficher()

"""Polymorphisme"""

class lettre:
  def __init__(self,poids,expe,adrDest,adrExp, format):
    self.poids = poids
    self.expe = expe
    self.adrDest = adrDest
    self.adrExp = adrExp
    self.format = format
  def calculTimbre(self):
    tarifDefaut=0
    if self.format == "A4":
      tarifDefaut = 2.5
    elif self.format == "A3":
      tarifDefaut = 3.50
    else:
      print("Ce format n'existe pas")
    poidsKilos=0.00 + self.poids/1000
    montant = tarifDefaut + 1 * poidsKilos
    if self.expe =="express":
      montant = montant * 2
    return montant
  def ToString(self):
    print("Lettre : \nAdresse destination : ",self.adrDest,"\nAdresse expedition : ", self.adrExp, "\nPoids (g) : ", 
          self.poids, "\nMode : ", self.expe, "\nFormat : ",self.format, "\nPrix du timbre : ", self.calculTimbre() )

class colis:
  def __init__(self,poids,expe,adrDest,adrExp, volume):
    self.poids = poids
    self.expe = expe
    self.adrDest = adrDest
    self.adrExp = adrExp
    self.volume = volume
  def calculTimbre(self):
    poidsKilos=0.00 + self.poids/1000
    montant = 0.25 * self.volume * poidsKilos +1
    if self.expe =="express":
      montant = montant * 2
    return montant
  def ToString(self):
    print("Lettre : \nAdresse destination : ",self.adrDest,"\nAdresse expedition : ", self.adrExp, "\nPoids (g) : ", 
          self.poids, "\nMode : ", self.expe, "\nVolume : ",self.volume, "\nPrix du timbre : ", self.calculTimbre() )

Lettre1=colis(1300,"express", "Paris", "Mantes", 2.25)
Lettre1.ToString()

